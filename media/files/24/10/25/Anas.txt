import cv2
image = cv2.imread("ggg.png",1)

cv2.imshow('Image', image)
cv2.waitKey(0)
cv2.imwrite("sss.png",image)
cv2.destroyAllWindows()
import numpy as np
import cv2

cap =cv2.VideoCapture(0)
if(cap.isOpened() == False):
    print("Enabled to read camera")

frame_width = int(cap.get(3))
frame_height = int(cap.get(4))

while(True):
    ret, frame = cap.read()
    if ret == True:
        cv2.imshow('frame', frame)
        if cv2.waitKey(1) & 0xff == ord('q'):
            break
    else:
        break
cap.release()
cv2.destroyAllWindows()
import cv2 as c
img = c.imread("ddd.png")
px = img[100,100]
print(px)
(B,G,R)=img[100,50]
print("R={} , G={} , B{}".format(R,G,B))
import numpy as np
imgg = c.imread("ddd.png")
grayimg = c.cvtColor(imgg,c.COLOR_BGR2GRAY)
ret,binaryimg = c.threshold(grayimg,127,255,c.THRESH_BINARY)
bwimg = np.zeros_like(grayimg)
bwimg[grayimg>140]=255
c.imshow("color image",imgg)
c.imshow("Gray-scale",grayimg)
c.imshow("binary image",binaryimg)
c.imshow("binary imae",bwimg)
c.waitKey(0)
c.destroyAllWindows()
imggg=c.imread("btn.png",0)
print("shape-dimention",imggg.shape)
print("size->numbers of pixels: ",img.size)
print("type: ",imggg)
img2=c.imread("btn.png")
print('image2')
print("shape->dimentions: ",img2.shape)
print("size->numbers of pixels: ",img2.size)
print("type: ",img2.dtype)
c.imshow("image2",img2)
c.waitKey(0)
c.destroyAllWindows()
import sys
img3 = c.imread("ggg.png",0)
if img3 is None:
    print('Failed to tread image from file')
    sys.exit(1)
c.imshow("image3",img3)
k = c.waitKey(0)
if k==27:
    c.destroyAllWindows()
elif k==ord('s'):
    c.imwrite("KKK.png",img3)
    c.destroyAllWindows()